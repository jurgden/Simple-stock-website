<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= stock.symbol %> - Stock Details</title>
  <!-- Load the Google Charts library -->
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@400;700&display=swap');
  
    body {
      font-family: 'Inconsolata', monospace;
      margin: 0;
      padding: 0;
      background: #0c0c0c;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  
    h1 {
      font-weight: 700;
      margin-bottom: 20px;
      color: #21ce99;
    }
  
    table {
      width: 90%;
      border-collapse: separate;
      border-spacing: 0 15px;
    }
  
    th,
    td {
      padding: 15px;
      text-align: left;
    }
  
    th {
      background-color: rgba(33, 206, 153, 0.1);
      color: #21ce99;
      border-radius: 10px 10px 0 0;
      font-weight: 700;
    }
  
    td {
      background-color: rgba(255, 255, 255, 0.05);
      color: #b3b3b3;
      border-radius: 10px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
    }
  
    img {
      border-radius: 50%;
    }
  
    tr {
      background: none;
    }
  </style>
</head>
<body>
  <h1><%= stock.name %> (<%= stock.symbol %>)</h1>
  <p>Current Price: <%= stock.price %></p>
  <!-- Add additional data points for each stock -->
  <div id="chart_div" style="width: 100%; height: 500px;"></div>
  
  <!-- Add the script to initialize and draw the chart -->
  <script>
    // Load the Visualization API and the corechart package
    google.charts.load('current', {packages: ['corechart']});

    // Set a callback to run when the Google Visualization API is loaded
    google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table, instantiates the chart, passes in the data, and draws it
    function drawChart() {
      // Create the data table
      const data = new google.visualization.DataTable();
      data.addColumn('string', 'Date');
      data.addColumn('number', 'Market Cap');

      // TODO: Fetch historical market cap data and populate the data table
      // Example data format: [['2023-05-01', 1000000000], ['2023-05-02', 1050000000], ...]
      data.addRows(<%= JSON.stringify(stock.historical.map(({ datetime, market_cap }) => [datetime, parseFloat(market_cap)])) %>);


      // Set chart options
      const options = {
        title: 'Market Cap History',
        curveType: 'function',
        legend: { position: 'bottom' },
      };

      // Instantiate and draw the chart, passing in the options
      const chart = new google.visualization.LineChart(document.getElementById('chart_div'));
      chart.draw(data, options);
    }
  </script>
</body>
</html>
